import os
import re
from aiogram import types
from bot.loader import dp, bot
from bot.utils.mysql import db
from bot.filters import IsAdminUser
from aiogram.dispatcher import FSMContext
from bot.keyboards import inline as ikb
from aiogram.dispatcher.filters.builtin import Text

from bot.utils.states.add_ref_link_state import StepsAddRefLink


@dp.message_handler(IsAdminUser(), Text('–†–µ—Ñ–µ—Ä–∞–ª—ã'))
async def referal_system_info(message: types.Message):
    await message.answer('–†–µ—Ñ–µ—Ä–∞–ª—å–Ω—ã–µ —Å—Å—ã–ª–∫–∏\n\n'
                         '–ß—Ç–æ–±—ã –¥–æ–±–∞–≤–∏—Ç—å —Ä–µ—Ñ–µ—Ä–∞–ª—å–Ω—É—é —Å—Å—ã–ª–∫—É, –≤–≤–µ–¥–∏ –∫–æ–º–∞–Ω–¥—É - /add_ref', reply_markup=await ikb.ikb_referals_links())


@dp.callback_query_handler(IsAdminUser(), lambda callback: callback.data.startswith('referal_link_'))
async def referal_link(callback: types.CallbackQuery, state: FSMContext):
    ref_link_id = callback.data[13:]
    referal_link_info = await db.get_referal_link_info_by_id(ref_link_id)

    name_link = referal_link_info[1]
    all_users = referal_link_info[3]
    unique_users = referal_link_info[2]
    ref_users_alive = await db.get_ref_users_alive(name_link)
    ref_users_op = await db.get_ref_users_op(name_link)
    ref_hour, ref_day = await db.get_unique_users_hour_and_day(name_link)

    await state.update_data(ref_link_id=ref_link_id)
    result_message = f'–î–∞–Ω–Ω—ã–µ —Ä–µ—Ñ–µ—Ä–∞–ª—å–Ω–æ–π —Å—Å—ã–ª–∫–∏.\n\n' \
                     f'–ù–∞–∑–≤–∞–Ω–∏–µ —Å—Å—ã–ª–∫–∏: {name_link}\n\n' \
                     f'üìä –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞:\n' \
                     f'‚Ä¢ –í—Å–µ–≥–æ –ø–µ—Ä–µ—à–ª–∏: {all_users}\n' \
                     f'‚Ä¢ –ò–∑ –Ω–∏—Ö —É–Ω–∏–∫–∞–ª—å–Ω—ã—Ö –ø–µ—Ä–µ—Ö–æ–¥–æ–≤: {unique_users}\n' \
                     f'‚Ä¢ –ò–∑ –Ω–∏—Ö –∂–∏–≤—ã: {ref_users_alive}\n' \
                     f'‚Ä¢ –ò–∑ –Ω–∏—Ö –ø–æ–¥–ø–∏—Å–∞–ª–∏—Å—å –Ω–∞ –û–ü: {ref_users_op}\n\n' \
                     f'üë§ –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ –ø–æ –≤—Ä–µ–º–µ–Ω–∏:\n' \
                     f'‚Ä¢ –ó–∞ –ø–æ—Å–ª–µ–¥–Ω–∏–π —á–∞—Å: {ref_hour}\n' \
                     f'‚Ä¢ –ó–∞ –ø–æ—Å–ª–µ–¥–Ω–∏–µ 24 —á–∞—Å–∞: {ref_day}\n\n' \
                     f'–°—Å—ã–ª–∫–∞: <code>https://t.me/{os.getenv("BOT_LINK")}?start={name_link}</code>'

    await bot.edit_message_text(result_message, callback.message.chat.id, callback.message.message_id, reply_markup=ikb.InlineKeyboardMarkup(inline_keyboard=[
        [
            ikb.InlineKeyboardButton(text='üóë –£–¥–∞–ª–∏—Ç—å', callback_data='referal_delete')
        ],
        [
            ikb.InlineKeyboardButton(text='‚óÄÔ∏è –ù–∞–∑–∞–¥', callback_data='referal_back')
        ],
    ]))


@dp.callback_query_handler(IsAdminUser(), lambda callback: callback.data == 'referal_delete')
async def delete_referal_link(callback: types.CallbackQuery, state: FSMContext):
    await bot.edit_message_text('–¢–æ—á–Ω–æ —É–¥–∞–ª—è–µ–º? –ü–æ–¥—Ç–≤–µ—Ä–¥–∏ —Å–≤–æ–µ –¥–µ–π—Å—Ç–≤–∏–µ.', callback.message.chat.id, callback.message.message_id, reply_markup=ikb.InlineKeyboardMarkup(inline_keyboard=[
        [
            ikb.InlineKeyboardButton(text='–£–¥–∞–ª—è–µ–º', callback_data='confirm_referal_delete')
        ],
        [
            ikb.InlineKeyboardButton(text='–û—Ç–º–µ–Ω–∞', callback_data='confirm_referal_cancel')
        ],
    ]))


@dp.callback_query_handler(IsAdminUser(), lambda callback: callback.data == 'confirm_referal_delete')
async def confirm_delete_referal_link(callback: types.CallbackQuery, state: FSMContext):
    data = await state.get_data()
    ref_id = data["ref_link_id"]
    await db.delete_referal_link(ref_id)
    await bot.edit_message_text('–†–µ—Ñ–µ—Ä–∞–ª—å–Ω–∞—è —Å—Å—ã–ª–∫–∞ —É—Å–ø–µ—à–Ω–æ —É–¥–∞–ª–µ–Ω–∞!', callback.message.chat.id, callback.message.message_id)
    await state.reset_data()


@dp.callback_query_handler(IsAdminUser(), lambda callback: callback.data == 'confirm_referal_cancel')
async def confirm_delete_referal_link(callback: types.CallbackQuery, state: FSMContext):
    await state.reset_data()
    await bot.edit_message_text('–î–µ–π—Å—Ç–≤–∏–µ –æ—Ç–º–µ–Ω–µ–Ω–æ.', callback.message.chat.id, callback.message.message_id)


@dp.callback_query_handler(IsAdminUser(), lambda callback: callback.data == 'referal_back')
async def back_referals_links(callback: types.CallbackQuery):
    await bot.edit_message_text('–†–µ—Ñ–µ—Ä–∞–ª—å–Ω—ã–µ —Å—Å—ã–ª–∫–∏\n\n'
                                '–ß—Ç–æ–±—ã –¥–æ–±–∞–≤–∏—Ç—å —Ä–µ—Ñ–µ—Ä–∞–ª—å–Ω—É—é —Å—Å—ã–ª–∫—É, –≤–≤–µ–¥–∏ –∫–æ–º–∞–Ω–¥—É - /add_ref', callback.message.chat.id, callback.message.message_id,
                                reply_markup=await ikb.ikb_referals_links())


@dp.message_handler(IsAdminUser(), commands=['add_ref'])
async def add_ref_link(message: types.Message, state:FSMContext):
    await message.answer('–í–≤–µ–¥–∏ –Ω–∞–∑–≤–∞–Ω–∏–µ —Å—Å—ã–ª–∫–∏.\n\n'
                         '‚ùóÔ∏è –ù–∞–∑–≤–∞–Ω–∏–µ —Å—Å—ã–ª–∫–∏ –¥–æ–ª–∂–Ω–æ –±—ã—Ç—å –∏—Å–∫–ª—é—á–∏—Ç–µ–ª—å–Ω–æ –Ω–∞ –∞–Ω–≥–ª–∏–π—Å–∫–æ–º —è–∑—ã–∫–µ\n'
                         '‚ùóÔ∏è –ù–∞–∑–≤–∞–Ω–∏–µ —Å—Å—ã–ª–∫–∏ –Ω–µ –¥–æ–ª–∂–Ω–æ —Å–æ–¥–µ—Ä–∂–∞—Ç—å –ø—Ä–æ–±–µ–ª–æ–≤, —Å–º–∞–π–ª–æ–≤, –∏ —Ç.–ø.\n'
                         '‚ùóÔ∏è –ò—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å _ –∏–ª–∏ - –∏ —Ü–∏—Ñ—Ä—ã –≤ –Ω–∞–∑–≤–∞–Ω–∏–∏ —Å—Å—ã–ª–∫–∏ –º–æ–∂–Ω–æ\n'
                         '‚ö†Ô∏è –¢–∞–∫ –∂–µ –Ω–µ —Å–æ–≤–µ—Ç—É–µ—Ç—Å—è –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å —Å—Å—ã–ª–∫–∏ —Å–æ—Å—Ç–æ—è—â–∏–µ —Ç–æ–ª—å–∫–æ –∏–∑ —Ü–∏—Ñ—Ä, —Ç–∞–∫ –∫–∞–∫ –æ–±—ã—á–Ω–∞—è —Ä–µ—Ñ–µ—Ä–∞–ª—å–Ω–∞—è —Å–∏—Å—Ç–µ–º–∞ –º–æ–∂–µ—Ç —Å –Ω–∏–º–∏ –∫–æ–Ω—Ñ–ª–∏–∫—Ç–æ–≤–∞—Ç—å')
    await state.set_state(StepsAddRefLink.get_ref_name)


@dp.message_handler(IsAdminUser(), state=StepsAddRefLink.get_ref_name)
async def get_name_ref_link(message: types.Message, state: FSMContext):
    result_link = message.text.replace(" ", "")
    result_link = result_link.lower()
    if re.match(r'^[a-zA-Z\d_-]+$', result_link):
        await message.answer('–ó–∞–ø–∏—Å–∞–ª –Ω–æ–≤—É—é —Ä–µ—Ñ–µ—Ä–∞–ª—å–Ω—É—é —Å—Å—ã–ª–∫—É –≤ –±–∞–∑—É –¥–∞–Ω–Ω—ã—Ö.')
        await db.add_referal_link(result_link)
    else:
        return await message.answer('‚ùóÔ∏è –ù–µ–∫–æ—Ä—Ä–µ–∫—Ç–Ω–∞—è —Å—Å—ã–ª–∫–∞. –í —Å—Å—ã–ª–∫–µ —Å–æ–¥–µ—Ä–∂–∞—Ç—Å—è –Ω–µ–¥–æ–ø—É—Å—Ç–∏–º—ã–µ —Å–∏–º–≤–æ–ª—ã. –í–≤–µ–¥–∏ –Ω–∞–∑–≤–∞–Ω–∏–µ —Å—Å—ã–ª–∫–∏ –µ—â–µ —Ä–∞–∑.')
    await state.finish()


